name: 'Issue Automation'

on:
  issues:
    types: [ opened ]

jobs:
  comment-job:
    name: 'Comment Job'

    runs-on: ubuntu-latest

    steps:
    - name: Create comment
      uses: actions/github-script@v7
      with:
        script: |
          const creator = context.payload.sender.login
          const opts = github.rest.issues.listForRepo.endpoint.merge({
            ...context.issue,
            creator,
            state: 'all'
          })
          const issues = await github.paginate(opts)

          for (const issue of issues) {
            if (issue.number === context.issue.number) {
              continue
            }

            if (issue.pull_request) {
              return // Creator is already a contributor.
            }
          }

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `👋 Welcome!

            처음 오셨군요!
            아직 익숙하지 않으실텐데요, 먼저 여기 [가이드](Policy.md)를 한번 봐주세요!

            모르는게 있으면 언제든 편하게 질문해주시고 끝까지 잘 마무리 해 보아요~!`
          })

    - name: Apply labels
      uses: actions/github-script@v7
      with:
        script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['HackersGround_240406']
            })